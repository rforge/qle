% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qleTest.R
\name{qleTest}
\alias{qleTest}
\title{Monte Carlo testing}
\usage{
qleTest(est, local = NULL, sim, ..., nsim = 100, obs = NULL,
  check.root = FALSE, na.rm = TRUE, cl = NULL, iseed = NULL,
  verbose = FALSE)
}
\arguments{
\item{est}{object of class \code{qle}, the estimation results from function \code{\link{qle}}}

\item{local}{optional, object of class \code{QSResult}, \code{NULL} (default), local estimation results}

\item{sim}{user supplied simulation function (see \code{\link{qle}})}

\item{...}{arguments passed to the simulation function `\code{sim}`}

\item{nsim}{number of model replications to generate the simulated statistics}

\item{obs}{optional, \code{NULL} (default), simulated statistics at the hypothesized parameter}

\item{check.root}{logical, \code{FALSE} (default), whether to check consistency of estimated parameter (see \code{\link{checkMultRoot}})}

\item{na.rm}{logical, \code{TRUE}  (default), whether to remove `NA` values from the matrix of
re-estimated parameters}

\item{cl}{cluster object, \code{NULL} (default), see \code{\link[parallel]{makeCluster}}}

\item{iseed}{integer seed for initializing the cluster workers}

\item{verbose}{logical, \code{TRUE} for intermediate output}
}
\value{
An object of class \code{qleTest} as a list of
 (predicted) standard errors as follows:

	\item{param}{ data frame of estimated parameters and error measures}
	\item{test}{ the test result}
 \item{Stest}{ name of the test}

  with attributes:
	 \item{msem}{ mean square error matrix of re-estimated parameters}
  \item{aiqm}{ average inverse quasi-information matrix over all re-estimated parameters}
  \item{obs}{ list of simulated observed statistics}
  \item{optRes}{ results from re-estimating the model parameters for each simulated observation from `\code{obs}`}
 \item{mean.score}{ average quasi-score or average gradient of MD at the re-estimated parameters}
  \item{info}{ list of indices of re-estimation results where the inversion of the quasi-information matrix failed,
      the re-estimated parameters have NA values, and criterion function minimizations have errors or did not converge,
      the integer seed `\code{iseed}`}

 @details 
 
	The function expects an object of class \code{\link{qle}}. Simulated statistics which are already available at the estimated
 parameter can be passed by the argument `\code{obs}`. Otherwise the function first generates those realizations using `\code{nsim}`
 model replications. The criterion functions are used as specified in the object `\code{qsd}` and will not be further improved by
 additional samples during the test since this would result in a full estimation procedure again. The test statistic is either chosen
 as the current criterion function in `\code{OPT}` (see  \code{\link{getQLmodel}}, argument `\code{criterion}`) or taken from the
 optional argument `\code{local}` if supplied. Given optimization results by argument `\code{local}` of class \code{QSResult}, the
 user can select a different criterion function as a test statistic than used before for estimating the parameter. Apart from
 the QD as a test statistic, in principle, any supported type of least squares criterion (or more general Mahalanobis distance) can
 be used depending on the choice of variance matrix approximation (see \code{\link{covarTx}}). In some situations, the re-estimations
 might fail to converge due. However, the user can control the convergence of local solvers (including quasi-scoring) by the
 corresponding control parameters passed to the solvers, see \code{\link{searchMinimizer}}. Failed re-estimation results are extracted
 and stored in the attribute `\code{info}`. In addition, we return the standard error, predicted standard error (based on the average
 inverse quasi-information matrix), root mean square error, bias and sample mean value of the re-estimated parameters in order to assess
 the accuracy of the estimated parameter.    

	\subsection{Background}{

 The function tests the null hypothesis \eqn{H_0:\,\hat{\theta}=\theta_0}, that is, whether the statistical
 model is true, against the alternative \eqn{H_1:\,\hat{\theta}\neq\theta_0} by a Monte Carlo approach (see vignette).
 Due to the approximate nature of the assumed statistical model for the observed data the exact distribution of the test
 statistics (Mahalanobis distance or quasi-deviance) is generally unknown and therefore its asymptotic distribution might
 be an unrealistic assumption for the null hypothesis. For this reason, and in order to retrieve an empirical P-value for
 testing, we (artifically) generate new observations from the outcome of the model replications and re-estimate the model
 parameter for each realization in the same way as done before when estimating the model parameter. This includes all versions
 of variance approximations (by kriging or average approximations) and types of prediction variances (by kriging or a CV-based
 approach) used to construct the statistics for estimating the parameter. 

}

For an in depth example see the package vignette.
}
\description{
Monte Carlo hypothesis testing
}
\author{
M. Baaske
}
